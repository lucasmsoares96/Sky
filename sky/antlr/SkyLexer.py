# Generated from ./sky/Sky.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,11,77,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,1,0,1,0,1,1,1,1,1,2,1,2,
        1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,5,6,38,8,6,10,6,12,6,41,9,6,1,7,
        1,7,3,7,45,8,7,1,7,1,7,5,7,49,8,7,10,7,12,7,52,9,7,3,7,54,8,7,1,
        8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,5,9,64,8,9,10,9,12,9,67,9,9,1,9,1,
        9,1,10,4,10,72,8,10,11,10,12,10,73,1,10,1,10,0,0,11,1,1,3,2,5,3,
        7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,1,0,6,1,0,97,122,4,0,48,
        57,65,90,95,95,97,122,1,0,49,57,1,0,48,57,2,0,10,10,13,13,3,0,9,
        10,13,13,32,32,82,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,
        0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
        0,0,19,1,0,0,0,0,21,1,0,0,0,1,23,1,0,0,0,3,25,1,0,0,0,5,27,1,0,0,
        0,7,29,1,0,0,0,9,31,1,0,0,0,11,33,1,0,0,0,13,35,1,0,0,0,15,53,1,
        0,0,0,17,55,1,0,0,0,19,59,1,0,0,0,21,71,1,0,0,0,23,24,5,58,0,0,24,
        2,1,0,0,0,25,26,5,61,0,0,26,4,1,0,0,0,27,28,5,42,0,0,28,6,1,0,0,
        0,29,30,5,43,0,0,30,8,1,0,0,0,31,32,5,40,0,0,32,10,1,0,0,0,33,34,
        5,41,0,0,34,12,1,0,0,0,35,39,7,0,0,0,36,38,7,1,0,0,37,36,1,0,0,0,
        38,41,1,0,0,0,39,37,1,0,0,0,39,40,1,0,0,0,40,14,1,0,0,0,41,39,1,
        0,0,0,42,54,5,48,0,0,43,45,5,45,0,0,44,43,1,0,0,0,44,45,1,0,0,0,
        45,46,1,0,0,0,46,50,7,2,0,0,47,49,7,3,0,0,48,47,1,0,0,0,49,52,1,
        0,0,0,50,48,1,0,0,0,50,51,1,0,0,0,51,54,1,0,0,0,52,50,1,0,0,0,53,
        42,1,0,0,0,53,44,1,0,0,0,54,16,1,0,0,0,55,56,5,73,0,0,56,57,5,78,
        0,0,57,58,5,84,0,0,58,18,1,0,0,0,59,60,5,45,0,0,60,61,5,45,0,0,61,
        65,1,0,0,0,62,64,8,4,0,0,63,62,1,0,0,0,64,67,1,0,0,0,65,63,1,0,0,
        0,65,66,1,0,0,0,66,68,1,0,0,0,67,65,1,0,0,0,68,69,6,9,0,0,69,20,
        1,0,0,0,70,72,7,5,0,0,71,70,1,0,0,0,72,73,1,0,0,0,73,71,1,0,0,0,
        73,74,1,0,0,0,74,75,1,0,0,0,75,76,6,10,0,0,76,22,1,0,0,0,7,0,39,
        44,50,53,65,73,1,6,0,0
    ]

class SkyLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    ID = 7
    NUM = 8
    INT_TYPE = 9
    COMMENT = 10
    WP = 11

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "':'", "'='", "'*'", "'+'", "'('", "')'", "'INT'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "NUM", "INT_TYPE", "COMMENT", "WP" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "ID", 
                  "NUM", "INT_TYPE", "COMMENT", "WP" ]

    grammarFileName = "Sky.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


